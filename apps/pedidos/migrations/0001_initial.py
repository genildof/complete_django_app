# Generated by Django 4.1.7 on 2023-03-27 03:55

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Pedido",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("pedido", models.CharField(max_length=14, verbose_name="Pedido")),
                (
                    "id_vantive",
                    models.CharField(
                        max_length=7, null=True, verbose_name="ID Vantive"
                    ),
                ),
                (
                    "num_wcd",
                    models.CharField(max_length=7, null=True, verbose_name="WCD/SPE"),
                ),
                (
                    "num_atp",
                    models.CharField(max_length=7, null=True, verbose_name="ATP"),
                ),
                (
                    "servico",
                    models.CharField(max_length=22, null=True, verbose_name="Serviço"),
                ),
                (
                    "velocidade",
                    models.CharField(
                        max_length=8, null=True, verbose_name="Velocidade"
                    ),
                ),
                ("sla", models.CharField(max_length=11, null=True, verbose_name="SLA")),
                (
                    "carteira",
                    models.CharField(max_length=14, null=True, verbose_name="Carteira"),
                ),
                (
                    "segmento",
                    models.CharField(max_length=12, null=True, verbose_name="Segmento"),
                ),
                (
                    "esteira",
                    models.CharField(max_length=2, null=True, verbose_name="Esteira"),
                ),
                (
                    "nova_quebra",
                    models.CharField(
                        max_length=17, null=True, verbose_name="Nova Quebra"
                    ),
                ),
                (
                    "classificacao_resumo",
                    models.CharField(
                        max_length=24, null=True, verbose_name="Classificação Resumo"
                    ),
                ),
                (
                    "esteira_regionalizada",
                    models.CharField(
                        max_length=22, null=True, verbose_name="Esteira Regionalizada"
                    ),
                ),
                (
                    "cliente",
                    models.CharField(max_length=100, null=True, verbose_name="Cliente"),
                ),
                (
                    "cidade",
                    models.CharField(max_length=30, null=True, verbose_name="Cidade"),
                ),
                (
                    "delta_rec_total",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=8,
                        null=True,
                        verbose_name="Delta Receita",
                    ),
                ),
                (
                    "cadeia_pendencias_descricao",
                    models.CharField(
                        max_length=50, null=True, verbose_name="Cadeira Descrição"
                    ),
                ),
                (
                    "wcd_tarefa_rede",
                    models.CharField(
                        max_length=30, null=True, verbose_name="WCD Tarefa Rede"
                    ),
                ),
                (
                    "data_entrada",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Data Entrada"
                    ),
                ),
                (
                    "data_tecnica",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Data Tecnica"
                    ),
                ),
                (
                    "data_planejada",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Data Planejada"
                    ),
                ),
                (
                    "data_rede",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Data Rede"
                    ),
                ),
                (
                    "status_update",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Status Update"
                    ),
                ),
                ("rede_status", models.CharField(max_length=25, null=True)),
                ("rede_id_sco", models.CharField(max_length=6, null=True)),
                ("rede_status_sco", models.CharField(max_length=25, null=True)),
                ("rede_contratada", models.CharField(max_length=25, null=True)),
                (
                    "rede_data_contratada",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Data Contratada"
                    ),
                ),
                ("escalonado", models.BooleanField(default=False, null=True)),
                (
                    "estimativa",
                    models.CharField(
                        choices=[
                            ("MES_CORRENTE", "Mes Corrente"),
                            ("MES_FUTURO", "Mes Futuro"),
                        ],
                        default="MES_FUTURO",
                        max_length=12,
                        verbose_name="Pedido",
                    ),
                ),
                (
                    "pendencia_macro",
                    models.CharField(
                        choices=[
                            ("ACESSO", "Acesso Central"),
                            ("AGENDADO", "Agendado"),
                            ("AGENDAR", "Agendar"),
                            ("ATUALIZAR", "Atualizar o Status"),
                            ("CABO_INTERNO", "Lancamento Interno"),
                            ("CADASTRO", "Cadastro Fenix"),
                            ("CAPACITACAO", "Capacitacao"),
                            ("PLAT_ELEV", "Prataforma Elevatória"),
                            ("DOCUMENTACAO", "Documentacao"),
                            ("DESPACHO", "Despacho"),
                            ("DWDM", "DWDM"),
                            ("EQUIPAMENTO", "Equipamento"),
                            ("ENTREGUE", "Entregue"),
                            ("FIBRA_ABERTA", "Fibra Aberta"),
                            ("FORNECEDOR", "Fornecedor"),
                            ("INFRA", "Infra Cliente"),
                            ("LINK_BAIXA", "Link Baixa - DDR/SIP"),
                            ("PCC", "Enviado Para PCC"),
                            ("PCC_CONF", "Validar envio PCC"),
                            ("RET_PCC", "Validar retorno PCC"),
                            ("PLANEJAMENTO", "Planejamento"),
                            ("RET_PLAN", "Validar retorno Planejamento"),
                            ("PONTA_REMOTA", "Ponta Remota"),
                            ("RADIO_ACESSO", "Rádio Acesso"),
                            ("REDE_EXTERNA", "Rede Externa"),
                            ("REDE_DCN", "Rede DCN"),
                            ("REFERENCIA", "ATP Referencia"),
                            ("SEM_ATP", "Sem ATP / WCD"),
                            ("TESTE_STRESS", "Teste de Stress"),
                            ("TRANSPORTE", "Transporte"),
                            ("TRIAGEM", "Triagem Revisar"),
                            ("VIABILIDADE", "Viabilidade"),
                            ("VISTORIA", "Vistoria"),
                            ("TESTE_OTDR", "Teste OTDR"),
                            ("UPLINK", "Uplink ERB Saturado"),
                        ],
                        default="ATUALIZAR",
                        max_length=12,
                        verbose_name="Pendência Macro",
                    ),
                ),
            ],
            options={
                "ordering": ["-carteira"],
            },
        ),
        migrations.CreateModel(
            name="TimeSeries",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="FibraAberta",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[("PENDENTE", "Pendente"), ("REPARO_OK", "Reparo OK")],
                        default="PENDENTE",
                        max_length=9,
                    ),
                ),
                ("nota", models.CharField(max_length=200)),
                (
                    "pedido",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="pedidos.pedido"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Comentario",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nota", models.CharField(max_length=200)),
                (
                    "pedido",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="pedidos.pedido"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ChangeLog",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("field_name", models.CharField(max_length=30)),
                ("old_value", models.CharField(max_length=30, null=True)),
                ("new_value", models.CharField(max_length=30, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "pedido",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="pedidos.pedido"
                    ),
                ),
            ],
        ),
    ]
